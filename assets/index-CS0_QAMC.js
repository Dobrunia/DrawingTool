var E=Object.defineProperty;var I=(l,t,e)=>t in l?E(l,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):l[t]=e;var n=(l,t,e)=>I(l,typeof t!="symbol"?t+"":t,e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))o(s);new MutationObserver(s=>{for(const i of s)if(i.type==="childList")for(const r of i.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&o(r)}).observe(document,{childList:!0,subtree:!0});function e(s){const i={};return s.integrity&&(i.integrity=s.integrity),s.referrerPolicy&&(i.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?i.credentials="include":s.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function o(s){if(s.ep)return;s.ep=!0;const i=e(s);fetch(s.href,i)}})();const M='<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.6667 13.6667L18 10.3333L14.6667 7M18 10.3333H8.83333C7.94928 10.3333 7.10143 10.6845 6.47631 11.3096C5.85119 11.9348 5.5 12.7826 5.5 13.6667C5.5 14.5507 5.85119 15.3986 6.47631 16.0237C7.10143 16.6488 7.94928 17 8.83333 17H9.66667"/></svg>',b='<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.33333 13.6667L6 10.3333L9.33333 7M6 10.3333H15.1667C16.0507 10.3333 16.8986 10.6845 17.5237 11.3096C18.1488 11.9348 18.5 12.7826 18.5 13.6667C18.5 14.5507 18.1488 15.3986 17.5237 16.0237C16.8986 16.6488 16.0507 17 15.1667 17H14.3333"/></svg>';class k{constructor(){n(this,"canvas");n(this,"ctx");n(this,"undoButton");n(this,"redoButton");n(this,"saveButton");n(this,"sizeInput");n(this,"toolButtons");n(this,"colorButtons");n(this,"colorSelector");n(this,"cursor");n(this,"undoStack",[]);n(this,"redoStack",[]);n(this,"drawing",!1);n(this,"currentTool","brush");n(this,"color","#FFFFFF");n(this,"size",4);n(this,"offscreenCanvas");n(this,"offscreenCtx");this.canvas=document.getElementById("drawingCanvas"),this.ctx=this.canvas.getContext("2d",{willReadFrequently:!0}),this.undoButton=document.getElementById("undo"),this.redoButton=document.getElementById("redo"),this.saveButton=document.getElementById("save"),this.sizeInput=document.querySelector(".brush-size"),this.toolButtons=document.querySelectorAll(".tool-btn"),this.colorButtons=document.querySelectorAll(".color-btn"),this.colorSelector=document.querySelector("#color-selector"),this.cursor=this.createCursor(),this.offscreenCanvas=document.createElement("canvas"),this.offscreenCtx=this.offscreenCanvas.getContext("2d",{willReadFrequently:!0}),this.init()}init(){this.setupUI(),this.setupCanvas(),this.attachEventListeners()}setupUI(){this.undoButton.innerHTML=b,this.redoButton.innerHTML=M}setupCanvas(){const t=new Image;t.src="1.png",t.onload=()=>{this.canvas.width=t.width,this.canvas.height=t.height,this.offscreenCanvas.width=t.width,this.offscreenCanvas.height=t.height,this.ctx.drawImage(t,0,0,t.width,t.height),this.offscreenCtx.drawImage(t,0,0,t.width,t.height),this.saveState()},this.canvas.style.cursor="none"}createCursor(){const t=document.createElement("div");return t.style.position="absolute",t.style.borderRadius="50%",t.style.pointerEvents="none",t.style.zIndex="1000",t.style.border="2px solid rgba(255, 255, 255, 0.5)",t.style.display="none",document.body.appendChild(t),t}attachEventListeners(){this.canvas.addEventListener("mouseenter",()=>{this.cursor.style.display="block"}),this.canvas.addEventListener("mouseleave",()=>{this.cursor.style.display="none"}),this.canvas.addEventListener("mousemove",t=>this.updateCursor(t)),this.sizeInput.addEventListener("input",()=>this.updateBrushSize()),this.canvas.addEventListener("mousedown",t=>this.startDrawing(t)),this.canvas.addEventListener("mouseup",()=>this.stopDrawing()),this.canvas.addEventListener("mousemove",t=>this.draw(t)),this.canvas.addEventListener("mouseleave",()=>this.stopDrawing()),this.toolButtons.forEach(t=>{t.addEventListener("click",()=>this.selectTool(t))}),this.colorButtons.forEach(t=>{t.addEventListener("click",()=>this.selectColor(t))}),this.undoButton.addEventListener("click",()=>this.undo()),this.redoButton.addEventListener("click",()=>this.redo()),this.saveButton.addEventListener("click",()=>this.saveCanvas())}updateCursor(t){const e=t.clientX-this.size/2,o=t.clientY-this.size/2;this.cursor.style.left=`${e}px`,this.cursor.style.top=`${o}px`,this.cursor.style.width=`${this.size}px`,this.cursor.style.height=`${this.size}px`}updateBrushSize(){this.size=Number(this.sizeInput.value)}startDrawing(t){this.drawing=!0,this.ctx.beginPath(),this.ctx.moveTo(t.clientX-this.canvas.offsetLeft,t.clientY-this.canvas.offsetTop)}stopDrawing(){this.drawing&&(this.drawing=!1,this.ctx.closePath(),this.saveState())}draw(t){if(!this.drawing)return;const e=t.clientX-this.canvas.offsetLeft,o=t.clientY-this.canvas.offsetTop;this.ctx.lineWidth=this.size,this.ctx.lineCap="round",this.currentTool==="brush"?(this.ctx.strokeStyle=this.color,this.ctx.lineTo(e,o),this.ctx.stroke(),this.ctx.moveTo(e,o)):this.currentTool==="blur"&&this.applyBlur(e,o)}applyBlur(t,e){console.log(t,e)}selectTool(t){var e;this.toolButtons.forEach(o=>o.classList.remove("active")),t.classList.add("active"),this.currentTool=((e=t.textContent)==null?void 0:e.toLowerCase())||"brush",this.colorSelector.style.display=this.currentTool==="blur"?"none":"flex"}selectColor(t){this.colorButtons.forEach(e=>e.classList.remove("active")),t.classList.add("active"),this.color=window.getComputedStyle(t).backgroundColor}saveState(){this.redoStack=[],this.undoStack.push(this.canvas.toDataURL())}undo(){if(this.undoStack.length>0){this.redoStack.push(this.undoStack.pop());const t=this.undoStack[this.undoStack.length-1]||"1.png";this.loadCanvasFromUrl(t)}}redo(){if(this.redoStack.length>0){const t=this.redoStack.pop();this.undoStack.push(t),this.loadCanvasFromUrl(t)}}loadCanvasFromUrl(t){const e=new Image;e.src=t,e.onload=()=>{this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.ctx.drawImage(e,0,0)}}saveCanvas(){const t=document.createElement("a");t.download="canvas-image.png",t.href=this.canvas.toDataURL(),t.click()}}class z extends k{applyBlur(t,e){const o=this.size/2;this.ctx.save(),this.ctx.filter=`blur(${o}px)`,this.ctx.beginPath(),this.ctx.arc(t,e,o,0,Math.PI*2),this.ctx.clip(),this.ctx.drawImage(this.offscreenCanvas,0,0),this.ctx.restore()}}class D extends k{constructor(){super();n(this,"kernel",[]);n(this,"kernelSize",5);this.generateGaussianKernel(this.kernelSize,1)}generateGaussianKernel(e,o){const s=[],i=e/2;let r=0;for(let c=0;c<e;c++){const a=Math.exp(-.5*Math.pow((c-i)/o,2))/(o*Math.sqrt(2*Math.PI));s.push(a),r+=a}for(let c=0;c<e;c++)s[c]/=r;this.kernel=s}applyBlur(e,o){const s=Math.floor(this.size/2),i=Math.max(0,e-s),r=Math.max(0,o-s),c=Math.min(this.size,this.canvas.width-i),a=Math.min(this.size,this.canvas.height-r),h=this.ctx.getImageData(i,r,c,a),g=this.applyGaussianBlur(h);this.ctx.putImageData(g,i,r)}applyGaussianBlur(e){const o=e.data,s=e.width,i=e.height,r=new Uint8ClampedArray(o);for(let a=0;a<i;a++)for(let h=0;h<s;h++)this.applyKernel(r,o,h,a,s,i,!0);const c=new Uint8ClampedArray(r);for(let a=0;a<i;a++)for(let h=0;h<s;h++)this.applyKernel(c,r,h,a,s,i,!1);return new ImageData(c,s,i)}applyKernel(e,o,s,i,r,c,a){const h=Math.floor(this.kernelSize/2),g=this.kernel,u=(i*r+s)*4;let m=0,w=0,x=0,y=0;for(let d=-h;d<=h;d++){const p=g[d+h],C=a?d:0,L=a?0:d,B=Math.min(r-1,Math.max(0,s+C)),v=(Math.min(c-1,Math.max(0,i+L))*r+B)*4,S=Math.sqrt(C**2+L**2),f=Math.max(0,1-S/h);m+=o[v]*p*f,w+=o[v+1]*p*f,x+=o[v+2]*p*f,y+=o[v+3]*p*f}e[u]=m,e[u+1]=w,e[u+2]=x,e[u+3]=y}}window.onload=()=>{/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)?new z:new D};
